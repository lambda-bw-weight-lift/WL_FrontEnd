{"ast":null,"code":"import _defineProperty from \"/Users/nathanielmosco/CODE/Build-Week/Week-2-Weight-Lifting-Again/WL_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/nathanielmosco/CODE/Build-Week/Week-2-Weight-Lifting-Again/WL_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nathanielmosco/CODE/Build-Week/Week-2-Weight-Lifting-Again/WL_FrontEnd/src/components/SpecificWorkout.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport SpecificWorkoutCard from \"./SpecificWorkoutCard\";\nimport axiosWithAuth from \"../utils/\";\nimport { SecondaryBtn } from \"./Buttons\";\nexport default function SpecificWorkout(props) {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        edit = _useState2[0],\n        setEdit = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        exerciseID = _useState4[0],\n        setExerciseID = _useState4[1];\n\n  let exerciseArray = props.entireWorkout[0];\n  let workoutID = props.entireWorkout[1];\n\n  const refresh = () => {\n    axiosWithAuth().get(\"https://lifting-weights-java.herokuapp.com/workouts/\".concat(workoutID)).then(res => {\n      exerciseArray = res.data;\n    }).catch(err => console.log('SpecificWorkout.js axios failed b/c ', err.response));\n  };\n\n  const showEdit = id => {\n    setEdit(!edit);\n    setExerciseID(id);\n  };\n\n  const hideEdit = () => {\n    refresh();\n    setEdit(!edit);\n  };\n\n  if (edit) {\n    //show an edit form\n    const newBlankExercise = {\n      exercisename: \"\",\n      weightlifted: \"\",\n      reps: \"\",\n      restperiod: \"\",\n      exerciseregion: \"\"\n    };\n\n    function EditExercise(props) {\n      const _useState5 = useState(newBlankExercise),\n            _useState6 = _slicedToArray(_useState5, 2),\n            editExercise = _useState6[0],\n            setEditExercise = _useState6[1];\n\n      const handleSubmit = event => {\n        event.preventDefault();\n        axiosWithAuth().put(\"https://lifting-weights-java.herokuapp.com/exercise/\".concat(exerciseID), editExercise).then(results => {\n          console.log(\"result of post within handleSubmit in SpecificWorkout.js\", results);\n          setEditExercise(newBlankExercise);\n          props.getWorkouts();\n          hideEdit();\n        }).catch(error => {\n          console.log(\"error, did not post data correctly inside handlesubmit in SpecificWorkout.js\", error.response);\n        });\n      };\n\n      const handleChange = event => {\n        // console.log(\"handle change inside edit exercise is called\");\n        setEditExercise(_objectSpread({}, editExercise, {\n          [event.target.name]: event.target.value\n        })); // console.log('handle change in edit exercise w/ new values', editExercise)\n      };\n\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        className: \"form\",\n        onSubmit: event => {\n          handleSubmit(event);\n        },\n        autoComplete: \"on\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"exercisename\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Enter Exercise Name:\"), React.createElement(\"input\", {\n        className: \"form-field\",\n        id: \"exercisename\",\n        type: \"text\",\n        name: \"exercisename\",\n        placeholder: \"Squats\",\n        onChange: handleChange,\n        value: editExercise.exercisename,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"weightlifted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Enter Exercise Weight:\"), React.createElement(\"input\", {\n        className: \"form-field\",\n        id: \"weightlifted\",\n        type: \"text\",\n        name: \"weightlifted\",\n        placeholder: \"Enter amount in lbs/kg\",\n        onChange: handleChange,\n        value: editExercise.weightlifted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"reps\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Enter Sets X Reps\"), React.createElement(\"input\", {\n        className: \"form-field\",\n        id: \"reps\",\n        type: \"text\",\n        name: \"reps\",\n        placeholder: \"Sets X Reps\",\n        onChange: handleChange,\n        value: editExercise.reps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"restperiod\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Enter Rest Time\"), React.createElement(\"input\", {\n        className: \"form-field\",\n        id: \"restperiod\",\n        type: \"text\",\n        name: \"restperiod\",\n        placeholder: \"Enter rest time\",\n        onChange: handleChange,\n        value: editExercise.restperiod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Select Target Muscle Group:\", React.createElement(\"select\", {\n        name: \"exerciseregion\",\n        onChange: handleChange,\n        value: editExercise.exerciseregion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Pick A Group\"), React.createElement(\"option\", {\n        value: \"aerobic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Aerobic\"), React.createElement(\"option\", {\n        value: \"arms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Arms\"), React.createElement(\"option\", {\n        value: \"core\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Core\"), React.createElement(\"option\", {\n        value: \"legs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Legs\"), React.createElement(\"option\", {\n        value: \"stretches\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Stretches\"), React.createElement(\"option\", {\n        value: \"upperBody\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Upper Body\"))), React.createElement(\"button\", {\n        className: \"form button\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Update Exercise\")));\n    }\n\n    EditExercise(props);\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, exerciseArray.map(exercise => {\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(SpecificWorkoutCard, {\n        key: exercise.exerciseid,\n        exercise: exercise,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(SecondaryBtn, {\n        onClick: showEdit(exercise.exerciseid),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Edit Exercise\"));\n    }));\n  }\n}","map":{"version":3,"sources":["/Users/nathanielmosco/CODE/Build-Week/Week-2-Weight-Lifting-Again/WL_FrontEnd/src/components/SpecificWorkout.js"],"names":["React","useState","SpecificWorkoutCard","axiosWithAuth","SecondaryBtn","SpecificWorkout","props","edit","setEdit","exerciseID","setExerciseID","exerciseArray","entireWorkout","workoutID","refresh","get","then","res","data","catch","err","console","log","response","showEdit","id","hideEdit","newBlankExercise","exercisename","weightlifted","reps","restperiod","exerciseregion","EditExercise","editExercise","setEditExercise","handleSubmit","event","preventDefault","put","results","getWorkouts","error","handleChange","target","name","value","map","exercise","exerciseid"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport SpecificWorkoutCard from \"./SpecificWorkoutCard\"\nimport axiosWithAuth from \"../utils/\"\nimport { SecondaryBtn } from \"./Buttons\"\n\nexport default function SpecificWorkout(props) {\n    const [edit, setEdit] = useState(false)\n    const [exerciseID, setExerciseID] = useState(\"\")\n    let exerciseArray = props.entireWorkout[0]\n    let workoutID = props.entireWorkout[1]\n    const refresh = () => {\n        axiosWithAuth()\n            .get(`https://lifting-weights-java.herokuapp.com/workouts/${workoutID}`)\n            .then(res => {\n                exerciseArray = res.data\n            })\n            .catch(err => console.log('SpecificWorkout.js axios failed b/c ', err.response))\n    }\n    const showEdit = (id) => {\n        setEdit(!edit)\n        setExerciseID(id)\n    }\n    const hideEdit = () => {\n        refresh()\n        setEdit(!edit)\n    }\n\n\n    if (edit) {\n        //show an edit form\n        const newBlankExercise = {\n            exercisename: \"\",\n            weightlifted: \"\",\n            reps: \"\",\n            restperiod: \"\",\n            exerciseregion: \"\"\n        }\n        function EditExercise(props) {\n            const [editExercise, setEditExercise] = useState(newBlankExercise);\n\n            const handleSubmit = (event) => {\n                event.preventDefault();\n                axiosWithAuth()\n                    .put(`https://lifting-weights-java.herokuapp.com/exercise/${exerciseID}`, editExercise)\n                    .then(results => {\n                        console.log(\"result of post within handleSubmit in SpecificWorkout.js\", results)\n                        setEditExercise(newBlankExercise)\n                        props.getWorkouts()\n                        hideEdit()\n                    })\n                    .catch(error => {\n                        console.log(\"error, did not post data correctly inside handlesubmit in SpecificWorkout.js\", error.response)\n                    })\n            }\n\n            const handleChange = event => {\n                // console.log(\"handle change inside edit exercise is called\");\n                setEditExercise({ ...editExercise, [event.target.name]: event.target.value })\n                // console.log('handle change in edit exercise w/ new values', editExercise)\n            }\n\n            return (\n                <>\n                    <form className=\"form\" onSubmit={(event) => { handleSubmit(event) }} autoComplete=\"on\">\n                        <label htmlFor=\"exercisename\">Enter Exercise Name:</label>\n                        <input className=\"form-field\" id=\"exercisename\" type=\"text\" name=\"exercisename\" placeholder=\"Squats\" onChange={handleChange} value={editExercise.exercisename} />\n\n                        <label htmlFor=\"weightlifted\">Enter Exercise Weight:</label>\n                        <input className=\"form-field\" id=\"weightlifted\" type=\"text\" name=\"weightlifted\" placeholder=\"Enter amount in lbs/kg\" onChange={handleChange} value={editExercise.weightlifted} />\n\n                        <label htmlFor=\"reps\">Enter Sets X Reps</label>\n                        <input className=\"form-field\" id=\"reps\" type=\"text\" name=\"reps\" placeholder=\"Sets X Reps\" onChange={handleChange} value={editExercise.reps} />\n\n                        <label htmlFor=\"restperiod\">Enter Rest Time</label>\n                        <input className=\"form-field\" id=\"restperiod\" type=\"text\" name=\"restperiod\" placeholder=\"Enter rest time\" onChange={handleChange} value={editExercise.restperiod} />\n\n                        {/* <label htmlFor=\"exerciseRegion\">Target Muscle Group:</label>\n                        <Field className=\"form field\" id=\"exerciseRegion\" type=\"text\" name=\"exerciseRegion\" placeholder=\"Ex: Legs/Arms/Triceps\"/> */}\n                        <label>\n                            Select Target Muscle Group:\n                            <select name=\"exerciseregion\" onChange={handleChange} value={editExercise.exerciseregion}>\n                                <option value=\"default\">Pick A Group</option>\n                                <option value=\"aerobic\">Aerobic</option>\n                                <option value=\"arms\">Arms</option>\n                                <option value=\"core\">Core</option>\n                                <option value=\"legs\">Legs</option>\n                                <option value=\"stretches\">Stretches</option>\n                                <option value=\"upperBody\">Upper Body</option>\n                            </select>\n                        </label>\n                        {/* <Link to=\"/today\"> */}\n                        <button className=\"form button\" type=\"submit\" >Update Exercise</button>\n\n\n                    </form>\n                </>\n            )\n        }\n        EditExercise(props)\n    } else {\n        return (\n            <div>\n                {exerciseArray.map(exercise => {\n                    <div>\n                        <SpecificWorkoutCard key={exercise.exerciseid} exercise={exercise}></SpecificWorkoutCard>\n                        <SecondaryBtn onClick={showEdit(exercise.exerciseid)}>Edit Exercise</SecondaryBtn>\n                    </div>\n                })}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}