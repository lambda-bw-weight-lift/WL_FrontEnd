{"ast":null,"code":"var _jsxFileName = \"/Users/nathanielmosco/CODE/Build-Week/Week-2-Weight-Lifting-Again/WL_FrontEnd/src/components/EditExercise.js\";\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { withFormik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axiosWithAuth from \"../utils/axiosWithAuth\";\nimport '../index.css';\n\nfunction EditExercise() {\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    className: \"form\",\n    autoComplete: \"on\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"exercisename\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Enter Exercise Name:\"), React.createElement(\"input\", {\n    className: \"form field\",\n    id: \"exercisename\",\n    type: \"text\",\n    name: \"exercisename\",\n    placeholder: \"Squats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"weightlifted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Enter Exercise Weight:\"), React.createElement(\"input\", {\n    className: \"form field\",\n    id: \"weightlifted\",\n    type: \"text\",\n    name: \"weightlifted\",\n    placeholder: \"Enter amount in lbs/kg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"reps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Enter Sets X Reps\"), React.createElement(\"input\", {\n    className: \"form field\",\n    id: \"reps\",\n    type: \"text\",\n    name: \"reps\",\n    placeholder: \"Sets X Reps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"restperiod\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Enter Rest Time\"), React.createElement(\"input\", {\n    className: \"form field\",\n    id: \"restperiod\",\n    type: \"text\",\n    name: \"restperiod\",\n    placeholder: \"Enter rest time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Select Target Muscle Group:\", React.createElement(\"select\", {\n    name: \"exerciseregion\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Pick A Group\"), React.createElement(\"option\", {\n    value: \"aerobic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Aerobic\"), React.createElement(\"option\", {\n    value: \"arms\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Arms\"), React.createElement(\"option\", {\n    value: \"core\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Core\"), React.createElement(\"option\", {\n    value: \"legs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Legs\"), React.createElement(\"option\", {\n    value: \"stretches\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Stretches\"), React.createElement(\"option\", {\n    value: \"upperBody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Upper Body\"))), React.createElement(\"button\", {\n    className: \"form button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Submit Exercise\")));\n  axiosWithAuth() // .post(`https://lifting-weights-java.herokuapp.com/workouts/${values.workoutid}`, bodyData, {\n  //     headers: {\n  //         Authorization: `Basic ${btoa(\"pl,mkoijn:pl,mkoijn\")}`,\n  //         'Content-Type': 'application/x-www-form-urlencoded',\n  //     }\n  // .post(`https://lifting-weights-java.herokuapp.com/workouts/${values.workoutid}`, bodyData)\n  .put(\"https://lifting-weights-java.herokuapp.com/exercise/\".concat(values.exerciseid), values).then(results => {\n    console.log(\"result of post within handleSubmit in EditExercise.js\", results);\n    setStatus(results.data);\n    resetForm();\n    props.history.push(\"/today\");\n  }).catch(error => {\n    console.log(\"error, did not post data correctly\", error.response);\n  });\n  console.log(\"looking for values\", values);\n}\n\nexport default EditExercise;","map":{"version":3,"sources":["/Users/nathanielmosco/CODE/Build-Week/Week-2-Weight-Lifting-Again/WL_FrontEnd/src/components/EditExercise.js"],"names":["React","useEffect","useState","styled","withFormik","Form","Field","ErrorMessage","Yup","axiosWithAuth","EditExercise","put","values","exerciseid","then","results","console","log","setStatus","data","resetForm","props","history","push","catch","error","response"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,EAAkCC,YAAlC,QAAuD,QAAvD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAO,cAAP;;AAGA,SAASC,YAAT,GAAwB;AAGpB,SACI,0CACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,YAAY,EAAC,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,EAAE,EAAC,cAAjC;AAAgD,IAAA,IAAI,EAAC,MAArD;AAA4D,IAAA,IAAI,EAAC,cAAjE;AAAgF,IAAA,WAAW,EAAC,QAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI;AAAO,IAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHJ,EAII;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,EAAE,EAAC,cAAjC;AAAgD,IAAA,IAAI,EAAC,MAArD;AAA4D,IAAA,IAAI,EAAC,cAAjE;AAAgF,IAAA,WAAW,EAAC,wBAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALJ,EAMI;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,EAAE,EAAC,MAAjC;AAAwC,IAAA,IAAI,EAAC,MAA7C;AAAoD,IAAA,IAAI,EAAC,MAAzD;AAAgE,IAAA,WAAW,EAAC,aAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPJ,EAQI;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,EAAE,EAAC,YAAjC;AAA8C,IAAA,IAAI,EAAC,MAAnD;AAA0D,IAAA,IAAI,EAAC,YAA/D;AAA4E,IAAA,WAAW,EAAC,iBAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAEI;AAAQ,IAAA,IAAI,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAGI;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,EAII;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,EAKI;AAAQ,IAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,EAMI;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBANJ,EAOI;AAAQ,IAAA,KAAK,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,CAFJ,CAZJ,EAyBQ;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAgC,IAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAzBR,CADJ,CADJ;AAoCID,EAAAA,aAAa,GACT;AACA;AACA;AACA;AACA;AACA;AANS,GAORE,GAPL,+DAOgEC,MAAM,CAACC,UAPvE,GAOqFD,MAPrF,EAQKE,IARL,CAQUC,OAAO,IAAI;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,uDAAZ,EAAqEF,OAArE;AACAG,IAAAA,SAAS,CAACH,OAAO,CAACI,IAAT,CAAT;AACAC,IAAAA,SAAS;AACTC,IAAAA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmB,QAAnB;AACH,GAbL,EAcKC,KAdL,CAcWC,KAAK,IAAI;AACZT,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDQ,KAAK,CAACC,QAAxD;AACH,GAhBL;AAiBAV,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCL,MAAlC;AAEH;;AAKL,eAAeF,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { withFormik, Form, Field, ErrorMessage, } from \"formik\"\nimport * as Yup from \"yup\";\nimport axiosWithAuth from \"../utils/axiosWithAuth\";\nimport '../index.css';\n\n\nfunction EditExercise() {\n    \n\n    return (\n        <>\n            <form className=\"form\" autoComplete=\"on\">\n                <label htmlFor=\"exercisename\">Enter Exercise Name:</label>\n                <input className=\"form field\" id=\"exercisename\" type=\"text\" name=\"exercisename\" placeholder=\"Squats\" />\n                <label htmlFor=\"weightlifted\">Enter Exercise Weight:</label>\n                <input className=\"form field\" id=\"weightlifted\" type=\"text\" name=\"weightlifted\" placeholder=\"Enter amount in lbs/kg\" />\n                <label htmlFor=\"reps\">Enter Sets X Reps</label>\n                <input className=\"form field\" id=\"reps\" type=\"text\" name=\"reps\" placeholder=\"Sets X Reps\" />\n                <label htmlFor=\"restperiod\">Enter Rest Time</label>\n                <input className=\"form field\" id=\"restperiod\" type=\"text\" name=\"restperiod\" placeholder=\"Enter rest time\" />\n\n                {/* <label htmlFor=\"exerciseRegion\">Target Muscle Group:</label>\n                <Field className=\"form field\" id=\"exerciseRegion\" type=\"text\" name=\"exerciseRegion\" placeholder=\"Ex: Legs/Arms/Triceps\"/> */}\n                <label>\n                    Select Target Muscle Group:\n                    <select name=\"exerciseregion\">\n                        <option value=\"default\">Pick A Group</option>\n                        <option value=\"aerobic\">Aerobic</option>\n                        <option value=\"arms\">Arms</option>\n                        <option value=\"core\">Core</option>\n                        <option value=\"legs\">Legs</option>\n                        <option value=\"stretches\">Stretches</option>\n                        <option value=\"upperBody\">Upper Body</option>\n                    </select>\n                </label>\n                {/* <Link to=\"/today\"> */}\n                    <button className=\"form button\" type=\"submit\">Submit Exercise</button>\n                {/* </Link> */}\n\n            </form>\n        </>\n          )\n\n\n        \n        axiosWithAuth()\n            // .post(`https://lifting-weights-java.herokuapp.com/workouts/${values.workoutid}`, bodyData, {\n            //     headers: {\n            //         Authorization: `Basic ${btoa(\"pl,mkoijn:pl,mkoijn\")}`,\n            //         'Content-Type': 'application/x-www-form-urlencoded',\n            //     }\n            // .post(`https://lifting-weights-java.herokuapp.com/workouts/${values.workoutid}`, bodyData)\n            .put(`https://lifting-weights-java.herokuapp.com/exercise/${values.exerciseid}`, values)\n            .then(results => {\n                console.log(\"result of post within handleSubmit in EditExercise.js\", results)\n                setStatus(results.data);\n                resetForm();\n                props.history.push(\"/today\")\n            })\n            .catch(error => {\n                console.log(\"error, did not post data correctly\", error.response)\n            })\n        console.log(\"looking for values\", values)\n\n    }\n\n\n\n\nexport default EditExercise;"]},"metadata":{},"sourceType":"module"}