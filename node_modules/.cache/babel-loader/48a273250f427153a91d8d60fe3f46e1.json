{"ast":null,"code":"var _jsxFileName = \"/Users/nathanielmosco/CODE/Build-Week/Week-2-Weight-Lifting-Again/WL_FrontEnd/workout/src/components/AddExercise.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { withFormik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axiosWithAuth from \"../utils/axiosWithAuth\";\nimport '../index.css';\nimport { aerobic, arms, core, jumpRope, legs, stretches, upperBody, workoutPlan } from \"../media/SvgIcons\";\n\nfunction AddExercise({\n  values,\n  errors,\n  touched,\n  status\n}) {\n  return React.createElement(React.Fragment, null, React.createElement(Form, {\n    className: \"form\",\n    autoComplete: \"on\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"exercise\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Enter Exercise Name:\"), React.createElement(Field, {\n    className: \"form field\",\n    id: \"exercise\",\n    type: \"text\",\n    name: \"exercise\",\n    placeholder: \"Squats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"weight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Enter Exercise Weight:\"), React.createElement(Field, {\n    className: \"form field\",\n    id: \"weight\",\n    type: \"text\",\n    name: \"weight\",\n    placeholder: \"Enter amount in lbs/kg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"sets\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Enter Sets X Reps\"), React.createElement(Field, {\n    className: \"form field\",\n    id: \"sets\",\n    type: \"text\",\n    name: \"sets\",\n    placeholder: \"Sets X Reps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"restPeriod\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Enter Rest Time\"), React.createElement(Field, {\n    className: \"form field\",\n    id: \"restPeriod\",\n    type: \"text\",\n    name: \"restPeriod\",\n    placeholder: \"Enter rest time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Target Muscle Group\", React.createElement(Field, {\n    component: \"select\",\n    name: \"exerciseRegion\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 32 32\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"title\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"athletics\"), React.createElement(\"g\", {\n    class: \"nc-icon-wrapper\",\n    fill: \"#eb8200\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"circle\", {\n    cx: \"25.5\",\n    cy: \"4.5\",\n    r: \"3.5\",\n    fill: \"#eb8200\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), \" \", React.createElement(\"path\", {\n    d: \"M29.893,12.431l-4.271,1.581L22.643,8.593a3.351,3.351,0,0,0-.691-.871,3.012,3.012,0,0,0-1.047-.583L12.446,4.568a1.5,1.5,0,0,0-1.788.761L7.987,10.671l2.238,1.119,2.546-3.978,4.068,1.267-5.117,5.969a2.989,2.989,0,0,0,1.339,4.8l5.567,1.9-3.446,5.675,2.039,1.457,5-7a1.5,1.5,0,0,0-.713-2.283L17.1,18l4.448-5.189,2.142,3.911a1.5,1.5,0,0,0,1.986.621l5.342-2.671Z\",\n    fill: \"#eb8200\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), \" \", React.createElement(\"path\", {\n    d: \"M9.586,19.338l-7.7,8.8,1.874,1.64,7.9-8.378a4.756,4.756,0,0,1-2.075-2.065Z\",\n    fill: \"#eb8200\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  })))), React.createElement(\"option\", {\n    value: \"aerobic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: aerobic,\n    alt: \"aerobic image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(\"option\", {\n    value: \"arms\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: arms,\n    alt: \"image of arms\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(\"option\", {\n    value: \"core\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: core,\n    alt: \"image of abdominal workout\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"option\", {\n    value: \"jump-rope\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: jumpRope,\n    alt: \"image of jump-rope\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(\"option\", {\n    value: \"legs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: legs,\n    alt: \"image of legs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"option\", {\n    value: \"stretches\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: stretches,\n    alt: \"stretching image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(\"option\", {\n    value: \"upper-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \" \", React.createElement(\"img\", {\n    src: upperBody,\n    alt: \"upper-body workout image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  })))), React.createElement(\"button\", {\n    className: \"form button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Submit Exercise\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, touched.exercise && errors.exercise && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, errors.exercise), touched.weight && errors.weight && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, errors.weight), touched.sets && errors.sets && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, errors.sets), touched.restPeriod && errors.restPeriod && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, errors.restPeriod), touched.exerciseRegion && errors.exerciseRegion && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, errors.exerciseRegion)));\n}\n\nconst FormikAddExercise = withFormik({\n  validationSchema: Yup.object().shape({\n    exercise: Yup.string().required(\"Exercise name required.\"),\n    weight: Yup.string().required(\"Enter 0 if body-weight exercise.\"),\n    sets: Yup.string().required(\"Number of sets/reps required\"),\n    restPeriod: Yup.string().required(\"If no rest enter 0\")\n  }),\n\n  mapPropsToValues({\n    exercise,\n    weight,\n    sets,\n    restPeriod,\n    exerciseRegion\n  }) {\n    return {\n      exercise: exercise || \"\",\n      weight: weight || \"\",\n      sets: sets || \"\",\n      restPeriod: restPeriod || \"\",\n      exerciseRegion: exerciseRegion || \"default\"\n    };\n  },\n\n  handleSubmit(values) {\n    axiosWithAuth().post(\"https://reqres.in/api/users/\", values).then(results => {\n      console.log(results);\n    }).catch(error => {\n      console.log(\"error, did not post data correctly\", error);\n    });\n    console.log(\"looking for values\", values);\n  }\n\n})(AddExercise);\nconsole.log(\"This is the Data\", FormikAddExercise);\nexport default FormikAddExercise;","map":{"version":3,"sources":["/Users/nathanielmosco/CODE/Build-Week/Week-2-Weight-Lifting-Again/WL_FrontEnd/workout/src/components/AddExercise.js"],"names":["React","styled","withFormik","Form","Field","ErrorMessage","Yup","axiosWithAuth","aerobic","arms","core","jumpRope","legs","stretches","upperBody","workoutPlan","AddExercise","values","errors","touched","status","exercise","weight","sets","restPeriod","exerciseRegion","FormikAddExercise","validationSchema","object","shape","string","required","mapPropsToValues","handleSubmit","post","then","results","console","log","catch","error"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport {withFormik, Form, Field, ErrorMessage,} from \"formik\"\nimport * as Yup from \"yup\";\nimport axiosWithAuth from \"../utils/axiosWithAuth\";\nimport '../index.css';\nimport {  aerobic, arms, core, jumpRope, legs, stretches, upperBody, workoutPlan} from \"../media/SvgIcons\"\n\nfunction AddExercise ({values, errors, touched, status}) {\n    \n    return(\n        <>   \n           <Form className=\"form\" autoComplete=\"on\">\n                <label htmlFor=\"exercise\">Enter Exercise Name:</label>\n                <Field className=\"form field\" id=\"exercise\" type=\"text\" name=\"exercise\" placeholder=\"Squats\"/>\n                <label htmlFor=\"weight\">Enter Exercise Weight:</label>\n                <Field className=\"form field\" id=\"weight\" type=\"text\" name=\"weight\" placeholder=\"Enter amount in lbs/kg\"/>\n                <label htmlFor=\"sets\">Enter Sets X Reps</label>\n                <Field className=\"form field\" id=\"sets\" type=\"text\" name=\"sets\" placeholder=\"Sets X Reps\"/>\n                <label htmlFor=\"restPeriod\">Enter Rest Time</label>\n                <Field className=\"form field\" id=\"restPeriod\" type=\"text\" name=\"restPeriod\" placeholder=\"Enter rest time\"/>\n               \n               <label>\n                   Target Muscle Group\n                   <Field component=\"select\" name=\"exerciseRegion\">\n                        <option value=\"default\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\"><title>athletics</title><g class=\"nc-icon-wrapper\" fill=\"#eb8200\"><circle cx=\"25.5\" cy=\"4.5\" r=\"3.5\" fill=\"#eb8200\"/> <path d=\"M29.893,12.431l-4.271,1.581L22.643,8.593a3.351,3.351,0,0,0-.691-.871,3.012,3.012,0,0,0-1.047-.583L12.446,4.568a1.5,1.5,0,0,0-1.788.761L7.987,10.671l2.238,1.119,2.546-3.978,4.068,1.267-5.117,5.969a2.989,2.989,0,0,0,1.339,4.8l5.567,1.9-3.446,5.675,2.039,1.457,5-7a1.5,1.5,0,0,0-.713-2.283L17.1,18l4.448-5.189,2.142,3.911a1.5,1.5,0,0,0,1.986.621l5.342-2.671Z\" fill=\"#eb8200\"/> <path d=\"M9.586,19.338l-7.7,8.8,1.874,1.64,7.9-8.378a4.756,4.756,0,0,1-2.075-2.065Z\" fill=\"#eb8200\"/></g></svg></option>\n                        <option value=\"aerobic\"><img src={aerobic} alt=\"aerobic image\"/></option>\n                        <option value=\"arms\"> <img src={arms} alt=\"image of arms\"/></option>\n                        <option value=\"core\"> <img src={core} alt=\"image of abdominal workout\"/></option>\n                        <option value=\"jump-rope\"> <img src={jumpRope} alt=\"image of jump-rope\"/></option>\n                        <option value=\"legs\"> <img src={legs} alt=\"image of legs\"/></option>\n                        <option value=\"stretches\"> <img src={stretches} alt=\"stretching image\"/></option>\n                        <option value=\"upper-body\"> <img src={upperBody} alt=\"upper-body workout image\"/></option>\n                   </Field>\n               </label>\n\n               <button className=\"form button\" type=\"submit\">Submit Exercise</button>\n               \n                {/* <label htmlFor=\"exerciseRegion\">Target Muscle Group:</label>\n                <Field className=\"form field\" id=\"exerciseRegion\" type=\"text\" name=\"exerciseRegion\" placeholder=\"Ex: Legs/Arms/Triceps\"/> */}\n            </Form>\n            <div>\n                {touched.exercise && errors.exercise &&(<p className=\"error\">{errors.exercise}</p>)}\n                {touched.weight && errors.weight &&(<p className=\"error\">{errors.weight}</p>)}\n                {touched.sets && errors.sets &&(<p className=\"error\">{errors.sets}</p>)}\n                {touched.restPeriod && errors.restPeriod &&(<p className=\"error\">{errors.restPeriod}</p>)}\n                {touched.exerciseRegion && errors.exerciseRegion &&(<p className=\"error\">{errors.exerciseRegion}</p>)}\n            </div>\n        \n        </>\n    );\n}\nconst FormikAddExercise= withFormik({\n    validationSchema: Yup.object().shape({\n        exercise: Yup.string().required(\"Exercise name required.\"),\n        weight: Yup.string().required(\"Enter 0 if body-weight exercise.\"),\n        sets: Yup.string().required(\"Number of sets/reps required\"),\n        restPeriod: Yup.string().required(\"If no rest enter 0\")\n    }),\n    mapPropsToValues({ exercise, weight, sets, restPeriod, exerciseRegion }) {\n        return{\n            exercise: exercise || \"\",\n            weight: weight || \"\",\n            sets: sets ||\"\",\n            restPeriod: restPeriod|| \"\",\n            exerciseRegion: exerciseRegion||\"default\"\n        };\n    },\n    handleSubmit(values) {\n        axiosWithAuth()\n        .post(\"https://reqres.in/api/users/\", values)\n        .then(results => {\n            console.log(results)\n        })\n        .catch(error =>{\n            console.log(\"error, did not post data correctly\", error)\n        })\n        console.log(\"looking for values\",values)\n    }\n})(AddExercise);\n\nconsole.log(\"This is the Data\", FormikAddExercise)\n\nexport default FormikAddExercise"]},"metadata":{},"sourceType":"module"}