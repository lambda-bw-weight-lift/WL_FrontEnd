{"ast":null,"code":"var _jsxFileName = \"/Users/nathanielmosco/CODE/Build-Week/Week-2-Weight-Lifting-Again/WL_FrontEnd/workout/src/components/AddExercise.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { withFormik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axiosWithAuth from \"../utils/axiosWithAuth\";\nimport '../index.css';\n\nfunction AddExercise({\n  values,\n  errors,\n  touched,\n  status\n}) {\n  useEffect(() => {\n    axiosWithAuth().post(\"/workouts/\".concat(workoutid), values).then(results => {\n      console.log(\"result of post within handleSubmit in AddExercise.js\", results);\n    }).catch(error => {\n      console.log(\"error, did not post data correctly\", error);\n    });\n    console.log(\"looking for values\", values);\n  }, [status]);\n  return React.createElement(React.Fragment, null, React.createElement(Form, {\n    className: \"form\",\n    autoComplete: \"on\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"exercise\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Enter Exercise Name:\"), React.createElement(Field, {\n    className: \"form field\",\n    id: \"exercise\",\n    type: \"text\",\n    name: \"exercise\",\n    placeholder: \"Squats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"weight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Enter Exercise Weight:\"), React.createElement(Field, {\n    className: \"form field\",\n    id: \"weight\",\n    type: \"text\",\n    name: \"weight\",\n    placeholder: \"Enter amount in lbs/kg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"sets\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Enter Sets X Reps\"), React.createElement(Field, {\n    className: \"form field\",\n    id: \"sets\",\n    type: \"text\",\n    name: \"sets\",\n    placeholder: \"Sets X Reps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"restPeriod\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Enter Rest Time\"), React.createElement(Field, {\n    className: \"form field\",\n    id: \"restPeriod\",\n    type: \"text\",\n    name: \"restPeriod\",\n    placeholder: \"Enter rest time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Select Target Muscle Group:\", React.createElement(Field, {\n    component: \"select\",\n    name: \"exerciseRegion\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Pick A Group\"), React.createElement(\"option\", {\n    value: \"aerobic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Aerobic\"), React.createElement(\"option\", {\n    value: \"arms\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Arms\"), React.createElement(\"option\", {\n    value: \"core\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Core\"), React.createElement(\"option\", {\n    value: \"legs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Legs\"), React.createElement(\"option\", {\n    value: \"stretches\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Stretches\"), React.createElement(\"option\", {\n    value: \"upperBody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Upper Body\"))), React.createElement(Link, {\n    to: \"/today\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"form button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Submit Exercise\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, touched.exercise && errors.exercise && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, errors.exercise), touched.weight && errors.weight && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, errors.weight), touched.sets && errors.sets && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, errors.sets), touched.restPeriod && errors.restPeriod && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, errors.restPeriod), touched.exerciseRegion && errors.exerciseRegion && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, errors.exerciseRegion)));\n}\n\nconst FormikAddExercise = withFormik({\n  validationSchema: Yup.object().shape({\n    exercise: Yup.string().required(\"Exercise name required.\"),\n    weight: Yup.string().required(\"Enter 0 if body-weight exercise.\"),\n    sets: Yup.string().required(\"Number of sets/reps required\"),\n    restPeriod: Yup.string().required(\"If no rest enter 0\")\n  }),\n\n  mapPropsToValues({\n    exercise,\n    weight,\n    sets,\n    restPeriod,\n    exerciseRegion\n  }) {\n    return {\n      exercise: exercise || \"\",\n      weight: weight || \"\",\n      sets: sets || \"\",\n      restPeriod: restPeriod || \"\",\n      exerciseRegion: exerciseRegion || \"\"\n    };\n  },\n\n  handleSubmit(values, {\n    setStatus\n  }) {\n    setStatus(values);\n  }\n\n})(AddExercise);\nconsole.log(\"This is the Data\", FormikAddExercise);\nexport default FormikAddExercise;","map":{"version":3,"sources":["/Users/nathanielmosco/CODE/Build-Week/Week-2-Weight-Lifting-Again/WL_FrontEnd/workout/src/components/AddExercise.js"],"names":["React","useEffect","useState","Link","styled","withFormik","Form","Field","ErrorMessage","Yup","axiosWithAuth","AddExercise","values","errors","touched","status","post","workoutid","then","results","console","log","catch","error","exercise","weight","sets","restPeriod","exerciseRegion","FormikAddExercise","validationSchema","object","shape","string","required","mapPropsToValues","handleSubmit","setStatus"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {Link} from \"react-router-dom\"\nimport styled from \"styled-components\";\nimport {withFormik, Form, Field, ErrorMessage,} from \"formik\"\nimport * as Yup from \"yup\";\nimport axiosWithAuth from \"../utils/axiosWithAuth\";\nimport '../index.css';\n\n\nfunction AddExercise ({values, errors, touched, status}) {\n    useEffect(() => {\n        axiosWithAuth()\n        .post(`/workouts/${workoutid}`, values)\n        .then(results => {\n            console.log(\"result of post within handleSubmit in AddExercise.js\",results)\n        })\n        .catch(error =>{\n            console.log(\"error, did not post data correctly\", error)\n        })\n        console.log(\"looking for values\",values) \n    }, [status])\n   \n    return(\n        <>   \n           <Form className=\"form\" autoComplete=\"on\">\n                <label htmlFor=\"exercise\">Enter Exercise Name:</label>\n                <Field className=\"form field\" id=\"exercise\" type=\"text\" name=\"exercise\" placeholder=\"Squats\"/>\n                <label htmlFor=\"weight\">Enter Exercise Weight:</label>\n                <Field className=\"form field\" id=\"weight\" type=\"text\" name=\"weight\" placeholder=\"Enter amount in lbs/kg\"/>\n                <label htmlFor=\"sets\">Enter Sets X Reps</label>\n                <Field className=\"form field\" id=\"sets\" type=\"text\" name=\"sets\" placeholder=\"Sets X Reps\"/>\n                <label htmlFor=\"restPeriod\">Enter Rest Time</label>\n                <Field className=\"form field\" id=\"restPeriod\" type=\"text\" name=\"restPeriod\" placeholder=\"Enter rest time\"/>\n                \n                {/* <label htmlFor=\"exerciseRegion\">Target Muscle Group:</label>\n                <Field className=\"form field\" id=\"exerciseRegion\" type=\"text\" name=\"exerciseRegion\" placeholder=\"Ex: Legs/Arms/Triceps\"/> */}\n                <label>\n                    Select Target Muscle Group:\n                    <Field component=\"select\" name=\"exerciseRegion\">\n                        <option value=\"default\">Pick A Group</option>\n                        <option value=\"aerobic\">Aerobic</option>\n                        <option value=\"arms\">Arms</option>\n                        <option value=\"core\">Core</option>\n                        <option value=\"legs\">Legs</option>\n                        <option value=\"stretches\">Stretches</option>\n                        <option value=\"upperBody\">Upper Body</option>\n                    </Field>\n                </label>\n                <Link to=\"/today\">\n                    <button className=\"form button\" type=\"submit\">Submit Exercise</button>\n                </Link>\n               \n            </Form>\n            <div>\n                {touched.exercise && errors.exercise &&(<p className=\"error\">{errors.exercise}</p>)}\n                {touched.weight && errors.weight &&(<p className=\"error\">{errors.weight}</p>)}\n                {touched.sets && errors.sets &&(<p className=\"error\">{errors.sets}</p>)}\n                {touched.restPeriod && errors.restPeriod &&(<p className=\"error\">{errors.restPeriod}</p>)}\n                {touched.exerciseRegion && errors.exerciseRegion &&(<p className=\"error\">{errors.exerciseRegion}</p>)}\n            </div>\n        </>\n    );\n}\nconst FormikAddExercise= withFormik({\n    validationSchema: Yup.object().shape({\n        exercise: Yup.string().required(\"Exercise name required.\"),\n        weight: Yup.string().required(\"Enter 0 if body-weight exercise.\"),\n        sets: Yup.string().required(\"Number of sets/reps required\"),\n        restPeriod: Yup.string().required(\"If no rest enter 0\")\n    }),\n    mapPropsToValues({ exercise, weight, sets, restPeriod, exerciseRegion }) {\n        return{\n            exercise: exercise || \"\",\n            weight: weight || \"\",\n            sets: sets ||\"\",\n            restPeriod: restPeriod|| \"\",\n            exerciseRegion: exerciseRegion||\"\"\n        };\n    },\n    handleSubmit(values, { setStatus }) {\n         setStatus(values)\n    }\n})(AddExercise);\n\nconsole.log(\"This is the Data\", FormikAddExercise)\n\nexport default FormikAddExercise"]},"metadata":{},"sourceType":"module"}