{"ast":null,"code":"import _defineProperty from \"/Users/nathanielmosco/CODE/Build-Week/Week-2-Weight-Lifting-Again/WL_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/nathanielmosco/CODE/Build-Week/Week-2-Weight-Lifting-Again/WL_FrontEnd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/nathanielmosco/CODE/Build-Week/Week-2-Weight-Lifting-Again/WL_FrontEnd/src/components/EditExercise.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\"; // import styled from \"styled-components\";\n\nimport axiosWithAuth from \"../utils/axiosWithAuth\";\nimport '../index.css';\nconst newBlankExercise = {\n  exercisename: \"\",\n  weightlifted: \"\",\n  reps: \"\",\n  restperiod: \"\",\n  exerciseregion: \"\"\n};\n\nfunction EditExercise(props) {\n  const _useState = useState(newBlankExercise),\n        _useState2 = _slicedToArray(_useState, 2),\n        editExercise = _useState2[0],\n        setEditExercise = _useState2[1]; // axiosWithAuth()\n  // .get(`https://lifting-weights-java.herokuapp.com/exercise/${props.exerciseid}`)\n  // .then(results => {\n  //     // console.log(\"result of post within handleSubmit in EditExercise.js\", results)\n  //     // props.history.push(\"/today\")\n  //     form=(results);\n  // })\n  // .catch(error => {\n  //     console.log(\"error, did not post data correctly inside handlesubmit in EditExercise.js\", error.response)\n  // })\n\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"handle submit inside edit exercise is called\"); // console.log(\"value of props.exerciseid in edit exercise handlesubmit\", props.exerciseid )\n    // console.log(\"value of props.exerciseid.exerciseid in edit exercise handlesubmit\", props.exerciseid.exerciseid)\n\n    axiosWithAuth().put(\"https://lifting-weights-java.herokuapp.com/exercise/\".concat(props.exerciseid.data.exerciseid), editExercise).then(results => {\n      console.log(\"result of post within handleSubmit in EditExercise.js\", results);\n      props.history.push(\"/today\");\n      setEditExercise(newBlankExercise);\n    }).catch(error => {\n      console.log(\"error, did not post data correctly inside handlesubmit in EditExercise.js\", error.response);\n    });\n  };\n\n  const handleChange = event => {\n    console.log(\"handle change inside edit exercise is called\");\n    setEditExercise(_objectSpread({}, editExercise, {\n      [event.target.name]: event.target.value\n    }));\n    console.log('handle change in edit exercise w/ new values', editExercise);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    autoComplete: \"on\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"exercisename\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Enter Exercise Name:\"), React.createElement(\"input\", {\n    className: \"form-field\",\n    id: \"exercisename\",\n    type: \"text\",\n    name: \"exercisename\",\n    placeholder: \"Squats\",\n    onChange: handleChange,\n    value: editExercise.exercisename,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"weightlifted\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Enter Exercise Weight:\"), React.createElement(\"input\", {\n    className: \"form-field\",\n    id: \"weightlifted\",\n    type: \"text\",\n    name: \"weightlifted\",\n    placeholder: \"Enter amount in lbs/kg\",\n    onChange: handleChange,\n    value: editExercise.weightlifted,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"reps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Enter Sets X Reps\"), React.createElement(\"input\", {\n    className: \"form-field\",\n    id: \"reps\",\n    type: \"text\",\n    name: \"reps\",\n    placeholder: \"Sets X Reps\",\n    onChange: handleChange,\n    value: editExercise.reps,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"restperiod\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Enter Rest Time\"), React.createElement(\"input\", {\n    className: \"form-field\",\n    id: \"restperiod\",\n    type: \"text\",\n    name: \"restperiod\",\n    placeholder: \"Enter rest time\",\n    onChange: handleChange,\n    value: editExercise.restperiod,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Select Target Muscle Group:\", React.createElement(\"select\", {\n    name: \"exerciseregion\",\n    onChange: handleChange,\n    value: editExercise.exerciseregion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"default\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Pick A Group\"), React.createElement(\"option\", {\n    value: \"aerobic\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Aerobic\"), React.createElement(\"option\", {\n    value: \"arms\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Arms\"), React.createElement(\"option\", {\n    value: \"core\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"Core\"), React.createElement(\"option\", {\n    value: \"legs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Legs\"), React.createElement(\"option\", {\n    value: \"stretches\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \"Stretches\"), React.createElement(\"option\", {\n    value: \"upperBody\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Upper Body\"))), React.createElement(\"button\", {\n    className: \"form button\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, \"Update Exercise\")));\n}\n\nexport default EditExercise;","map":{"version":3,"sources":["/Users/nathanielmosco/CODE/Build-Week/Week-2-Weight-Lifting-Again/WL_FrontEnd/src/components/EditExercise.js"],"names":["React","useState","axiosWithAuth","newBlankExercise","exercisename","weightlifted","reps","restperiod","exerciseregion","EditExercise","props","editExercise","setEditExercise","handleSubmit","event","preventDefault","console","log","put","exerciseid","data","then","results","history","push","catch","error","response","handleChange","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import styled from \"styled-components\";\nimport axiosWithAuth from \"../utils/axiosWithAuth\";\nimport '../index.css';\n\nconst newBlankExercise = {\n    exercisename: \"\",\n    weightlifted: \"\",\n    reps: \"\",\n    restperiod: \"\",\n    exerciseregion: \"\"\n}\n\n\nfunction EditExercise(props) {\n\n    const [editExercise, setEditExercise] = useState(newBlankExercise);\n\n    // axiosWithAuth()\n    // .get(`https://lifting-weights-java.herokuapp.com/exercise/${props.exerciseid}`)\n    // .then(results => {\n    //     // console.log(\"result of post within handleSubmit in EditExercise.js\", results)\n    //     // props.history.push(\"/today\")\n    //     form=(results);\n    // })\n    // .catch(error => {\n    //     console.log(\"error, did not post data correctly inside handlesubmit in EditExercise.js\", error.response)\n    // })\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        console.log(\"handle submit inside edit exercise is called\");\n        // console.log(\"value of props.exerciseid in edit exercise handlesubmit\", props.exerciseid )\n        // console.log(\"value of props.exerciseid.exerciseid in edit exercise handlesubmit\", props.exerciseid.exerciseid)\n        axiosWithAuth()\n            .put(`https://lifting-weights-java.herokuapp.com/exercise/${props.exerciseid.data.exerciseid}`, editExercise)\n            .then(results => {\n                console.log(\"result of post within handleSubmit in EditExercise.js\", results)\n                props.history.push(\"/today\")\n                setEditExercise(newBlankExercise);\n            })\n            .catch(error => {\n                console.log(\"error, did not post data correctly inside handlesubmit in EditExercise.js\", error.response)\n            })\n    }\n\n    const handleChange = event => {\n        console.log(\"handle change inside edit exercise is called\");\n        setEditExercise({...editExercise, [event.target.name]: event.target.value})\n        console.log('handle change in edit exercise w/ new values', editExercise)\n    }\n\n    return (\n        <>\n            <form className=\"form\" onSubmit={handleSubmit} autoComplete=\"on\">\n                <label htmlFor=\"exercisename\">Enter Exercise Name:</label>\n                <input className=\"form-field\" id=\"exercisename\" type=\"text\" name=\"exercisename\" placeholder=\"Squats\" onChange={handleChange} value={editExercise.exercisename} />\n\n                <label htmlFor=\"weightlifted\">Enter Exercise Weight:</label>\n                <input className=\"form-field\" id=\"weightlifted\" type=\"text\" name=\"weightlifted\" placeholder=\"Enter amount in lbs/kg\" onChange={handleChange} value={editExercise.weightlifted}/>\n\n                <label htmlFor=\"reps\">Enter Sets X Reps</label>\n                <input className=\"form-field\" id=\"reps\" type=\"text\" name=\"reps\" placeholder=\"Sets X Reps\" onChange={handleChange} value={editExercise.reps}/>\n\n                <label htmlFor=\"restperiod\">Enter Rest Time</label>\n                <input className=\"form-field\" id=\"restperiod\" type=\"text\" name=\"restperiod\" placeholder=\"Enter rest time\" onChange={handleChange} value={editExercise.restperiod}/>\n\n                {/* <label htmlFor=\"exerciseRegion\">Target Muscle Group:</label>\n                <Field className=\"form field\" id=\"exerciseRegion\" type=\"text\" name=\"exerciseRegion\" placeholder=\"Ex: Legs/Arms/Triceps\"/> */}\n                <label>\n                    Select Target Muscle Group:\n                    <select name=\"exerciseregion\" onChange={handleChange} value={editExercise.exerciseregion}>\n                        <option value=\"default\">Pick A Group</option>\n                        <option value=\"aerobic\">Aerobic</option>\n                        <option value=\"arms\">Arms</option>\n                        <option value=\"core\">Core</option>\n                        <option value=\"legs\">Legs</option>\n                        <option value=\"stretches\">Stretches</option>\n                        <option value=\"upperBody\">Upper Body</option>\n                    </select>\n                </label>\n                {/* <Link to=\"/today\"> */}\n                <button className=\"form button\" type=\"submit\" >Update Exercise</button>\n                {/* </Link> */}\n\n            </form>\n        </>\n    )\n}\n\n\n\n\nexport default EditExercise;"]},"metadata":{},"sourceType":"module"}