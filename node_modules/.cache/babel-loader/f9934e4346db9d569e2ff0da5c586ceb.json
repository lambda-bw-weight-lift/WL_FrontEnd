{"ast":null,"code":"var _jsxFileName = \"/Users/nathanielmosco/CODE/Build-Week/Week-2-Weight-Lifting-Again/WL_FrontEnd/workout/src/components/AddExercise.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { withFormik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport axiosWithAuth from \"../utils/axiosWithAuth\";\n\nfunction AddExercise({\n  values,\n  errors,\n  touched,\n  status\n}) {\n  return React.createElement(React.Fragment, null, React.createElement(Form, {\n    autoComplete: \"on\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"exercise\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Enter Exercise Name:\"), React.createElement(Field, {\n    id: \"exercise\",\n    type: \"text\",\n    name: \"exercise\",\n    placeholder: \"Squats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"weight\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Enter Exercise Weight:\"), React.createElement(Field, {\n    id: \"weight\",\n    type: \"text\",\n    name: \"weight\",\n    placeholder: \"Enter amount in lbs/kg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"sets\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Enter Sets X Reps\"), React.createElement(Field, {\n    id: \"sets\",\n    type: \"text\",\n    name: \"sets\",\n    placeholder: \"Sets X Reps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"restPeriod\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Enter Rest Time\"), React.createElement(Field, {\n    id: \"restPeriod\",\n    type: \"text\",\n    name: \"restPeriod\",\n    placeholder: \"Enter rest time\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"exerciseRegion\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Target Muscle Group:\"), React.createElement(Field, {\n    id: \"exerciseRegion\",\n    type: \"text\",\n    name: \"exerciseRegion\",\n    placeholder: \"Ex: Legs/Arms/Triceps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, touched.exercise && errors.exercise && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, errors.exercise), touched.weight && errors.weight && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, errors.weight), touched.sets && errors.sets && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, errors.sets), touched.restPeriod && errors.restPeriod && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, errors.restPeriod), touched.exerciseRegion && errors.exerciseRegion && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, errors.exerciseRegion)));\n}\n\nconst FormikAddExercise = withFormik({\n  validationSchema: Yup.object().shape({\n    exercise: Yup.string().required(\"Exercise name required.\"),\n    weight: Yup.string().required(\"Enter 0 if body-weight exercise.\"),\n    sets: Yup.string().required(\"Number of sets/reps required\"),\n    restPeriod: Yup.string().required(\"If no rest enter 0\")\n  }),\n\n  mapPropsToValues({\n    exercise,\n    weight,\n    sets,\n    restPeriod,\n    exerciseRegion\n  }) {\n    return {\n      exercise: exercise || \"\",\n      weight: weight || \"\",\n      sets: sets || \"\",\n      restPeriod: restPeriod || \"\",\n      exerciseRegion: exerciseRegion || \"\"\n    };\n  },\n\n  handleSubmit(values, {\n    setStatus\n  }) {\n    axiosWithAuth().post(\"https://reqres.in/api/users/\", values).then(results => {\n      console.log(results);\n      setStatus(results.data);\n    }).catch(error => {\n      console.log(\"error, did not post data correctly\", error);\n    });\n    console.log(\"looking for values\", values);\n  }\n\n})(AddExercise);\nconsole.log(\"This is the Data\", FormikAddExercise);\nexport default FormikAddExercise;","map":{"version":3,"sources":["/Users/nathanielmosco/CODE/Build-Week/Week-2-Weight-Lifting-Again/WL_FrontEnd/workout/src/components/AddExercise.js"],"names":["React","styled","withFormik","Form","Field","ErrorMessage","Yup","axiosWithAuth","AddExercise","values","errors","touched","status","exercise","weight","sets","restPeriod","exerciseRegion","FormikAddExercise","validationSchema","object","shape","string","required","mapPropsToValues","handleSubmit","setStatus","post","then","results","console","log","data","catch","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,UAAR,EAAoBC,IAApB,EAA0BC,KAA1B,EAAiCC,YAAjC,QAAqD,QAArD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;;AAEA,SAASC,WAAT,CAAsB;AAACC,EAAAA,MAAD;AAASC,EAAAA,MAAT;AAAiBC,EAAAA,OAAjB;AAA0BC,EAAAA;AAA1B,CAAtB,EAAyD;AAErD,SACI,0CACG,oBAAC,IAAD;AAAM,IAAA,YAAY,EAAC,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAO,IAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADL,EAEK,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,IAAI,EAAC,MAA1B;AAAiC,IAAA,IAAI,EAAC,UAAtC;AAAiD,IAAA,WAAW,EAAC,QAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFL,EAGK;AAAO,IAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAHL,EAIK,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,QAAV;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,IAAI,EAAC,QAApC;AAA6C,IAAA,WAAW,EAAC,wBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJL,EAKK;AAAO,IAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALL,EAMK,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,MAAV;AAAiB,IAAA,IAAI,EAAC,MAAtB;AAA6B,IAAA,IAAI,EAAC,MAAlC;AAAyC,IAAA,WAAW,EAAC,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANL,EAOK;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPL,EAQK,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,YAAV;AAAuB,IAAA,IAAI,EAAC,MAA5B;AAAmC,IAAA,IAAI,EAAC,YAAxC;AAAqD,IAAA,WAAW,EAAC,iBAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARL,EASK;AAAO,IAAA,OAAO,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BATL,EAUK,oBAAC,KAAD;AAAO,IAAA,EAAE,EAAC,gBAAV;AAA2B,IAAA,IAAI,EAAC,MAAhC;AAAuC,IAAA,IAAI,EAAC,gBAA5C;AAA6D,IAAA,WAAW,EAAC,uBAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVL,CADH,EAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,OAAO,CAACE,QAAR,IAAoBH,MAAM,CAACG,QAA3B,IAAuC;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBH,MAAM,CAACG,QAA7B,CAD5C,EAEKF,OAAO,CAACG,MAAR,IAAkBJ,MAAM,CAACI,MAAzB,IAAmC;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBJ,MAAM,CAACI,MAA7B,CAFxC,EAGKH,OAAO,CAACI,IAAR,IAAgBL,MAAM,CAACK,IAAvB,IAA+B;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBL,MAAM,CAACK,IAA7B,CAHpC,EAIKJ,OAAO,CAACK,UAAR,IAAsBN,MAAM,CAACM,UAA7B,IAA2C;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBN,MAAM,CAACM,UAA7B,CAJhD,EAKKL,OAAO,CAACM,cAAR,IAA0BP,MAAM,CAACO,cAAjC,IAAmD;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBP,MAAM,CAACO,cAA7B,CALxD,CAbJ,CADJ;AAuBH;;AACD,MAAMC,iBAAiB,GAAEhB,UAAU,CAAC;AAChCiB,EAAAA,gBAAgB,EAAEb,GAAG,CAACc,MAAJ,GAAaC,KAAb,CAAmB;AACjCR,IAAAA,QAAQ,EAAEP,GAAG,CAACgB,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,CADuB;AAEjCT,IAAAA,MAAM,EAAER,GAAG,CAACgB,MAAJ,GAAaC,QAAb,CAAsB,kCAAtB,CAFyB;AAGjCR,IAAAA,IAAI,EAAET,GAAG,CAACgB,MAAJ,GAAaC,QAAb,CAAsB,8BAAtB,CAH2B;AAIjCP,IAAAA,UAAU,EAAEV,GAAG,CAACgB,MAAJ,GAAaC,QAAb,CAAsB,oBAAtB;AAJqB,GAAnB,CADc;;AAOhCC,EAAAA,gBAAgB,CAAC;AAAEX,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,IAApB;AAA0BC,IAAAA,UAA1B;AAAsCC,IAAAA;AAAtC,GAAD,EAAyD;AACrE,WAAM;AACFJ,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,EADpB;AAEFC,MAAAA,MAAM,EAAEA,MAAM,IAAI,EAFhB;AAGFC,MAAAA,IAAI,EAAEA,IAAI,IAAG,EAHX;AAIFC,MAAAA,UAAU,EAAEA,UAAU,IAAG,EAJvB;AAKFC,MAAAA,cAAc,EAAEA,cAAc,IAAE;AAL9B,KAAN;AAOH,GAf+B;;AAgBhCQ,EAAAA,YAAY,CAAChB,MAAD,EAAS;AAACiB,IAAAA;AAAD,GAAT,EAAsB;AAC9BnB,IAAAA,aAAa,GACZoB,IADD,CACM,8BADN,EACsClB,MADtC,EAECmB,IAFD,CAEMC,OAAO,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAH,MAAAA,SAAS,CAACG,OAAO,CAACG,IAAT,CAAT;AACH,KALD,EAMCC,KAND,CAMOC,KAAK,IAAG;AACXJ,MAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDG,KAAlD;AACH,KARD;AASAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCtB,MAAjC;AACH;;AA3B+B,CAAD,CAAV,CA4BtBD,WA5BsB,CAAzB;AA8BAsB,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCb,iBAAhC;AAEA,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport {withFormik, Form, Field, ErrorMessage,} from \"formik\"\nimport * as Yup from \"yup\";\nimport axiosWithAuth from \"../utils/axiosWithAuth\";\n\nfunction AddExercise ({values, errors, touched, status}) {\n    \n    return(\n        <>   \n           <Form autoComplete=\"on\">\n                <label htmlFor=\"exercise\">Enter Exercise Name:</label>\n                <Field id=\"exercise\" type=\"text\" name=\"exercise\" placeholder=\"Squats\"/>\n                <label htmlFor=\"weight\">Enter Exercise Weight:</label>\n                <Field id=\"weight\" type=\"text\" name=\"weight\" placeholder=\"Enter amount in lbs/kg\"/>\n                <label htmlFor=\"sets\">Enter Sets X Reps</label>\n                <Field id=\"sets\" type=\"text\" name=\"sets\" placeholder=\"Sets X Reps\"/>\n                <label htmlFor=\"restPeriod\">Enter Rest Time</label>\n                <Field id=\"restPeriod\" type=\"text\" name=\"restPeriod\" placeholder=\"Enter rest time\"/>\n                <label htmlFor=\"exerciseRegion\">Target Muscle Group:</label>\n                <Field id=\"exerciseRegion\" type=\"text\" name=\"exerciseRegion\" placeholder=\"Ex: Legs/Arms/Triceps\"/>\n            </Form>\n            <div>\n                {touched.exercise && errors.exercise &&(<p className=\"error\">{errors.exercise}</p>)}\n                {touched.weight && errors.weight &&(<p className=\"error\">{errors.weight}</p>)}\n                {touched.sets && errors.sets &&(<p className=\"error\">{errors.sets}</p>)}\n                {touched.restPeriod && errors.restPeriod &&(<p className=\"error\">{errors.restPeriod}</p>)}\n                {touched.exerciseRegion && errors.exerciseRegion &&(<p className=\"error\">{errors.exerciseRegion}</p>)}\n            </div>\n        </>\n    );\n}\nconst FormikAddExercise= withFormik({\n    validationSchema: Yup.object().shape({\n        exercise: Yup.string().required(\"Exercise name required.\"),\n        weight: Yup.string().required(\"Enter 0 if body-weight exercise.\"),\n        sets: Yup.string().required(\"Number of sets/reps required\"),\n        restPeriod: Yup.string().required(\"If no rest enter 0\")\n    }),\n    mapPropsToValues({ exercise, weight, sets, restPeriod, exerciseRegion }) {\n        return{\n            exercise: exercise || \"\",\n            weight: weight || \"\",\n            sets: sets ||\"\",\n            restPeriod: restPeriod|| \"\",\n            exerciseRegion: exerciseRegion||\"\"\n        };\n    },\n    handleSubmit(values, {setStatus}) {\n        axiosWithAuth()\n        .post(\"https://reqres.in/api/users/\", values)\n        .then(results => {\n            console.log(results)\n            setStatus(results.data);\n        })\n        .catch(error =>{\n            console.log(\"error, did not post data correctly\", error)\n        })\n        console.log(\"looking for values\",values)\n    }\n})(AddExercise);\n\nconsole.log(\"This is the Data\", FormikAddExercise)\n\nexport default FormikAddExercise"]},"metadata":{},"sourceType":"module"}